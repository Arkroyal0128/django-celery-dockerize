# docker-compose.yml

version: "3.7"
networks:
  sample-project-net:  # Container들의 Private Network을 설정한다.
    ipam:
      config:
        - subnet: 172.20.1.0/24
volumes:  # Container 들에서 사용되는 Volume을 정의한다.
    sample-project-db-volume: {}
    sample-project-cache-volume: {}
    sample-project-media-volume: {}

services:
    sample-project-db:
        image: mariadb:10.3.11
        environment:
            - MYSQL_DATABASE=sample_database
            - MYSQL_USER=sample
            - MYSQL_PASSWORD=samplepassword
            - MYSQL_ROOT_PASSWORD=samplepassword
        ports:
            - "127.0.0.1:3306:3306"
        volumes:
            - sample-project-db-volume:/var/lib/mysql
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
        healthcheck:
            test: "/usr/bin/mysql --user=sample --password=samplepassword --execute=\"SHOW DATABASES\""
            interval: 3s
            timeout: 1s
            retries: 5
        networks:
            sample-project-net:
                ipv4_address: 172.20.1.2
        
    
    sample-project-cache:
        image: redis:5.0.3-alpine
        command: redis-server --requirepass samplepassword
        ports:
            - "127.0.0.1:6379:6379"
        volumes:
            - sample-project-cache-volume:/data
        healthcheck:
            test: "redis-cli -h 127.0.0.1 ping"            
            interval: 3s
            timeout: 1s
            retries: 5
        networks:
            sample-project-net:
                ipv4_address: 172.20.1.3   

    sample-project:
        build:
            context: .
            dockerfile: ./docker/Dockerfile        
        ports:
            - "8000:8000"            
        depends_on:            
            - sample-project-db               
            - sample-project-cache
        links:
            - sample-project-db:sample-project-db
            - sample-project-cache:sample-project-cache
        command: bash -c "pip3 install -r requirements.txt && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
        networks:
            sample-project-net:
                ipv4_address: 172.20.1.4
        volumes:
            - .:/sample-project/sample-project
            - sample-project-media-volume:/sample-project/sample-project-media:Z
                  
    sample-project-task:
        build:
            context: .
            dockerfile: ./docker/Dockerfile

        depends_on:            
            - sample-project-db               
            - sample-project-cache
                
        links:
            - sample-project-db:sample-project-db
            - sample-project-cache:sample-project-cache
        command: bash -c "pip3 install -r requirements.txt && celery -A sample_project worker"
        networks:
            sample-project-net:
                ipv4_address: 172.20.1.5
        volumes:
            - .:/sample-project/sample-project
            - sample-project-media-volume:/sample-project/sample-project-media:Z